Semantic HTML.
Remember that search engines care about HTML, the "what" of the website

CSS is the "how it looks" and does not affect search results

this is when we use other elements instead of divs
This allows search engines to tell what is on the page outside of a bunch of div elements

after a sea of divs, we now give these things meaning!

no use of CSS this chapter, but remembering all we learned about CSS,
we can totally use these new HTML tags with CSS

This gives us the best combination of applying the "what" in HTML with the
"look" from CSS,

Unfortunately this chapter's link to the HTML5 outliner is not working
https://cloud.magiclen.org/us/html-outliner
Using this link for now, but it's gross and doesn't like adblockers.

Yay, the "article" element which serves as a mini web page

"section" element is a nice wrapper. It doesn't change the look of the page,
but it communicates nicely for the semantic part of HTML

By adding those <section> elements,
 weâ€™re telling the document outline that it should be defined by
  the nesting structure of the <section> elements
  instead of the heading levels.
   This basically means that each <section>
   can have its own set of <h1> through <h6> headings
   that are independent of the rest of the page.

Do not manipulate outline with section. Do that with headers,
and use section to replace divs when necessary.

the "nav" element is a way to denote that a certain section is
a navigation bar on a website

"Header" not to be confused with "heading"
is for introductory content. Wrap a websites name and logo
in a header as well as navigational elements.

Headers are only associated with the nearest sectioning element,
so multiple headers can be used in different parts of a document
like "section", this helps our semantic design while allowing for convenient CSS

Finally we have Footers, which are like Headers. But at the end of the page. Like feet
head to toe. wow.

"Aside" can be used for things we want to remove from inside the article text. Such as an advertisement

We can also use "aside" to make a sidebar.



Remember, we should use semantic HTML wherever we can, but remember that divs are
just fine for any time the other semantic HTML does not make sense. Div is great
for when we just want to change the layout without altering the semantics

When in doubt, use a div. Messing up a semantic element is worse than not using outline

"time" element
<time datetime='yyyy-m-d'> the date </time>

datetime written in a way machines can read

"address" not for physical addresses but metadata like an email or something I guess

"figure" and "figcaption"
Figure is for diagrams/illustrations/code snips
figcaption adds an optional description. "alt" is for text replacement of an image
while figcaption is for supporting description




legacy browsers will have this:
section, article, aside, footer, header, nav {
  display: block;
}
to make everything behave like divs
